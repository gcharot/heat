heat_template_version: 2013-05-23
description: Wordpress Autoscale example/demo AutoScaling - NOT FOR PRODUCTION

parameters:
  image:
    type: string
    description: Image used for servers
    default: "CentOS 7 x86_64"
  key:
    type: string
    description: SSH key to connect to the servers
    default: gcharot

  bastion_flavor:
    type: string
    description: flavor used by the bastion
    default: m1.small

  db_flavor:
    type: string
    description: flavor used by the dababase
    default: m1.small

  web_flavor:
    type: string
    description: flavor used by the web servers
    default: m1.small

  web_min_pool:
    type: string
    description: min/initial number of web servers
    default: 2

  web_max_pool:
    type: string
    description: max number of web servers
    default: 5

  network_name:
    type: string
    description: Name of the deployed network
    default: wordpress_subnet

  network_cidr:
    type: string
    description: CIDR of the deployed network
    default: 10.0.0.0/24

  restore_from:
    type: string
    description: container and name of the backup to restore from
    default: none

  swift_ten_id:
    type: string
    description: swift id
    default: b0d0602de97f47c8ae25f48b2052ad19

  rt_id:
    type: string
    description: ID of the router to connect the network to
    default: 2f0c3cd1-e667-45e5-9452-1213dc1c7840

  floating_net_id:
    type: string
    description: ID of the floating IP network for public IPs
    default: 522762bc-3719-4cd7-be25-7832614aa65e

resources:

##### NETWORKING #####

  my_network:
    type: OS::Neutron::Net
    properties:
      name: {get_param: network_name}

  my_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: my_network }
      cidr:  {get_param: network_cidr}
      enable_dhcp: true
      dns_nameservers : [8.8.8.8]

  router_int:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_param: rt_id }
      subnet_id: { get_resource: my_subnet }

##### LOAD BALANCING #####

  my_monitor:
    type: OS::Neutron::HealthMonitor
    properties:
      type: TCP
      delay: 2
      max_retries: 2
      timeout: 2

  my_pool:
    type: OS::Neutron::Pool
    properties:
      description: test_pool
      lb_method: ROUND_ROBIN
      name: my_pool
      protocol: HTTP
      monitors: [{get_resource: my_monitor}]
      subnet_id: { get_resource: my_subnet }
      vip: {"session_persistence" : {type: SOURCE_IP}, "subnet": { get_resource: my_subnet }, "name": my_vip, "protocol_port": 80, "description": my_vip}

  lb:
    type: OS::Neutron::LoadBalancer
    depends_on: my_pool
    properties:
      protocol_port: 80
      pool_id: {get_resource: my_pool}


  lb_floating:
    type: "OS::Neutron::FloatingIP"
    depends_on: router_int
    properties:
      floating_network_id: { get_param: floating_net_id }
      port_id:
        get_attr: [my_pool, vip, port_id]

##### Instances declaration #####

# Autoscaling group for web fronts
  web_server_group:
    type: OS::Heat::AutoScalingGroup
    depends_on: my_subnet
    properties:
      min_size: {get_param: web_min_pool}
      max_size: {get_param: web_max_pool}
      resource:
        type: https://raw.githubusercontent.com/gcharot/heat/master/wordpress/lb_server.yaml
        properties:
            flavor: {get_param: web_flavor}
            image: {get_param: image}
            key_name: {get_param: key}
            metadata: {"metering.stack": {get_param: "OS::stack_id"}}
            pool_id: {get_resource: my_pool}
            net_id: {get_resource: my_network}

            user_data:
              str_replace:
                template: |
                  #!/bin/bash
                  yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
                  yum -y install http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
                  yum --enablerepo=remi -y install httpd mariadb wordpress sysbench psmisc
                  systemctl enable httpd
                  iptables -F
                  setenforce 0
                  sed -i  's/=enforcing/=disabled/g' /etc/selinux/config
                  sed -i "/Deny from All/d" /etc/httpd/conf.d/wordpress.conf
                  sed -i "s/Require local/Require all granted/" /etc/httpd/conf.d/wordpress.conf
                  sed -i s/database_name_here/wp/ /etc/wordpress/wp-config.php
                  sed -i s/username_here/wp/ /etc/wordpress/wp-config.php
                  sed -i s/password_here/mariawp/ /etc/wordpress/wp-config.php
                  sed -i s/localhost/$db_host/ /etc/wordpress/wp-config.php
                  systemctl start httpd
                  echo "I'm a born from heat and my name is $(hostname)" > /var/www/html/index.html
                  if [ $backup != 'none' ]; then
                    sed -i  "/DB_COLLATE/a define('WP_HOME','http://$site_ip/wordpress/');" /usr/share/wordpress/wp-config.php
                    sed -i  "/DB_COLLATE/a define('WP_SITEURL','http://$site_ip/wordpress/');" /usr/share/wordpress/wp-config.php
                  fi
                  echo "sysbench --test=cpu --cpu-max-prime=2000000 run &" > /home/centos/burn.sh
                  chmod 755 /home/centos/burn.sh
                params:
                  $db_host: {get_attr: [db01, first_address]}
                  $backup: {get_param: restore_from}
                  $site_ip: {get_attr: [lb_floating, floating_ip_address]}



# Database instance
  db01:
    type: OS::Nova::Server
    properties:
      image: {get_param: image}
      name : db01
      flavor: {get_param: db_flavor}
      key_name: gcharot
      networks: 
        - network: { get_resource: my_network }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            yum -y install mariadb mariadb-server python-setuptools  gcc python-devel
            easy_install pip
            pip install --upgrade setuptools
            pip install python-swiftclient
            pip install python-keystoneclient
            systemctl enable mariadb 
            systemctl start mariadb 
            iptables -F
            mysqladmin -u root password 'mariaroot'
            cat << EOF | mysql -u root --password='mariaroot'
            CREATE DATABASE wp;
            GRANT ALL PRIVILEGES ON wp.* TO 'wp'@localhost IDENTIFIED BY "mariawp";
            GRANT ALL PRIVILEGES ON wp.* TO 'wp'@'%' IDENTIFIED BY "mariawp";
            FLUSH PRIVILEGES;
            EXIT
            EOF
            setenforce 0
            sed -i  's/=enforcing/=disabled/g' /etc/selinux/config
            if [ $backup != 'none' ]; then
              curl -s  http://showcase.rcip.redhat.com:8080/v1/AUTH_$swift_id/$backup | mysql -u root -p'mariaroot' wp
            fi
          params:
            $backup: {get_param: restore_from}
            $swift_id: {get_param: swift_ten_id}

# Bastion instance
  bastion:
    type: OS::Nova::Server
    properties:
      image: {get_param: image}
      name : bastion
      flavor: {get_param: bastion_flavor}
      key_name: gcharot
      networks: 
        - network: { get_resource: my_network }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo "$db_host db01 db01" >> /etc/hosts 
            yum -y install wget
            wget https://raw.githubusercontent.com/gcharot/heat/master/wordpress/backup_wordpress.sh -O /usr/local/bin/backup_wordpress.sh
            chmod 755 /usr/local/bin/backup_wordpress.sh
          params:
            $db_host: {get_attr: [db01, first_address]}

  bastion_floating_ip:
    type: OS::Nova::FloatingIP
    properties:
      pool: public


  bastion_float_association:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: bastion_floating_ip }
      server_id: { get_resource: bastion }


#  bastion_floating:
#    type: OS::Neutron::FloatingIP
#    depends_on: router_int
#    properties:
#      floating_network_id: 6c83db7b-480e-4198-bc69-88df6fd17e55
#      port_id:
#        get_attr: [bastion, addresses, port_id]
# 


###### AUTOSCALING POLICIES ######

# Manual scaling can be done with :
# heat stack-update stack_name -f wordpress_autoscale.yml -P "web_min_pool=N"
# Check out matrics with ceilometer statistics --meter cpu_util -q 'resource_id=$instance_id' --period 60

  web_server_scaleup_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: web_server_group}
      cooldown: 60
      scaling_adjustment: 1

  web_server_scaledown_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: web_server_group}
      cooldown: 60
      scaling_adjustment: -1


  cpu_alarm_high:
    type: OS::Ceilometer::Alarm
    properties:
      description: Scale-up if the average CPU > 20% for 1 minute
      meter_name: cpu_util
      statistic: avg
      period: 120
      evaluation_periods: 1
      threshold: 50
      alarm_actions:
        - {get_attr: [web_server_scaleup_policy, alarm_url]}
      matching_metadata: {'metadata.user_metadata.stack': {get_param: "OS::stack_id"}}
      comparison_operator: gt

  cpu_alarm_low:
    type: OS::Ceilometer::Alarm
    properties:
      description: Scale-down if the average CPU < 15% for 10 minutes
      meter_name: cpu_util
      statistic: avg
      period: 600
      evaluation_periods: 1
      threshold: 15
      alarm_actions:
        - {get_attr: [web_server_scaledown_policy, alarm_url]}
      matching_metadata: {'metadata.user_metadata.stack': {get_param: "OS::stack_id"}}
      comparison_operator: lt


##### Stack outputs #####


outputs:
  pool_ip_address:
    value: {get_attr: [my_pool, vip, address]}
    description: The IP address of the load balancing pool
  bastion_pub_ip:
    value: {get_attr: [bastion_floating_ip, ip]}
    description: The bastion Public IP address
#  scale_up_url:
#    value: {get_attr: [web_server_scaleup_policy, alarm_url]}
#    description: Autoscaling alarm URL
  website_url:
    value:
      str_replace:
        template: http://host/wordpress/
        params:
          host: { get_attr: [lb_floating, floating_ip_address] }
    description: >
      This URL is the "external" URL that can be used to access the Wordpress site.

